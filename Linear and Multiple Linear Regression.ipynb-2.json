{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import statsmodels.api as sm\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "df=pd.read_csv('udemy.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SAT</th>\n",
       "      <th>GPA</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1714</td>\n",
       "      <td>2.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1664</td>\n",
       "      <td>2.52</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1760</td>\n",
       "      <td>2.54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1685</td>\n",
       "      <td>2.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1693</td>\n",
       "      <td>2.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1670</td>\n",
       "      <td>2.91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1764</td>\n",
       "      <td>3.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1764</td>\n",
       "      <td>3.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1792</td>\n",
       "      <td>3.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1850</td>\n",
       "      <td>3.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1735</td>\n",
       "      <td>3.02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1775</td>\n",
       "      <td>3.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1735</td>\n",
       "      <td>3.08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1712</td>\n",
       "      <td>3.08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>1773</td>\n",
       "      <td>3.12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>1872</td>\n",
       "      <td>3.17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1755</td>\n",
       "      <td>3.17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>1674</td>\n",
       "      <td>3.17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1842</td>\n",
       "      <td>3.17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>1786</td>\n",
       "      <td>3.19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>1761</td>\n",
       "      <td>3.19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>1722</td>\n",
       "      <td>3.19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>1663</td>\n",
       "      <td>3.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>1687</td>\n",
       "      <td>3.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>1974</td>\n",
       "      <td>3.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>1826</td>\n",
       "      <td>3.28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>1787</td>\n",
       "      <td>3.28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>1821</td>\n",
       "      <td>3.28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>2020</td>\n",
       "      <td>3.28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>1794</td>\n",
       "      <td>3.28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>1879</td>\n",
       "      <td>3.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>1887</td>\n",
       "      <td>3.47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>1730</td>\n",
       "      <td>3.47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>1953</td>\n",
       "      <td>3.47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>1781</td>\n",
       "      <td>3.47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>1891</td>\n",
       "      <td>3.48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>1964</td>\n",
       "      <td>3.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>1808</td>\n",
       "      <td>3.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>1893</td>\n",
       "      <td>3.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>2041</td>\n",
       "      <td>3.51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>1893</td>\n",
       "      <td>3.51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>1832</td>\n",
       "      <td>3.52</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>1850</td>\n",
       "      <td>3.52</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>1934</td>\n",
       "      <td>3.54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>1861</td>\n",
       "      <td>3.58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>1931</td>\n",
       "      <td>3.58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>1933</td>\n",
       "      <td>3.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>1778</td>\n",
       "      <td>3.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>1975</td>\n",
       "      <td>3.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>1934</td>\n",
       "      <td>3.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>2021</td>\n",
       "      <td>3.61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>2015</td>\n",
       "      <td>3.62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>1997</td>\n",
       "      <td>3.64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>2020</td>\n",
       "      <td>3.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>1843</td>\n",
       "      <td>3.71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>1936</td>\n",
       "      <td>3.71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>1810</td>\n",
       "      <td>3.71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>1987</td>\n",
       "      <td>3.73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>1962</td>\n",
       "      <td>3.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>2050</td>\n",
       "      <td>3.81</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>84 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     SAT   GPA\n",
       "0   1714  2.40\n",
       "1   1664  2.52\n",
       "2   1760  2.54\n",
       "3   1685  2.74\n",
       "4   1693  2.83\n",
       "5   1670  2.91\n",
       "6   1764  3.00\n",
       "7   1764  3.00\n",
       "8   1792  3.01\n",
       "9   1850  3.01\n",
       "10  1735  3.02\n",
       "11  1775  3.07\n",
       "12  1735  3.08\n",
       "13  1712  3.08\n",
       "14  1773  3.12\n",
       "15  1872  3.17\n",
       "16  1755  3.17\n",
       "17  1674  3.17\n",
       "18  1842  3.17\n",
       "19  1786  3.19\n",
       "20  1761  3.19\n",
       "21  1722  3.19\n",
       "22  1663  3.20\n",
       "23  1687  3.21\n",
       "24  1974  3.24\n",
       "25  1826  3.28\n",
       "26  1787  3.28\n",
       "27  1821  3.28\n",
       "28  2020  3.28\n",
       "29  1794  3.28\n",
       "..   ...   ...\n",
       "54  1879  3.44\n",
       "55  1887  3.47\n",
       "56  1730  3.47\n",
       "57  1953  3.47\n",
       "58  1781  3.47\n",
       "59  1891  3.48\n",
       "60  1964  3.49\n",
       "61  1808  3.49\n",
       "62  1893  3.50\n",
       "63  2041  3.51\n",
       "64  1893  3.51\n",
       "65  1832  3.52\n",
       "66  1850  3.52\n",
       "67  1934  3.54\n",
       "68  1861  3.58\n",
       "69  1931  3.58\n",
       "70  1933  3.59\n",
       "71  1778  3.59\n",
       "72  1975  3.60\n",
       "73  1934  3.60\n",
       "74  2021  3.61\n",
       "75  2015  3.62\n",
       "76  1997  3.64\n",
       "77  2020  3.65\n",
       "78  1843  3.71\n",
       "79  1936  3.71\n",
       "80  1810  3.71\n",
       "81  1987  3.73\n",
       "82  1962  3.76\n",
       "83  2050  3.81\n",
       "\n",
       "[84 rows x 2 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SAT</th>\n",
       "      <th>GPA</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>84.000000</td>\n",
       "      <td>84.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1845.273810</td>\n",
       "      <td>3.330238</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>104.530661</td>\n",
       "      <td>0.271617</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1634.000000</td>\n",
       "      <td>2.400000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1772.000000</td>\n",
       "      <td>3.190000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1846.000000</td>\n",
       "      <td>3.380000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1934.000000</td>\n",
       "      <td>3.502500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2050.000000</td>\n",
       "      <td>3.810000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               SAT        GPA\n",
       "count    84.000000  84.000000\n",
       "mean   1845.273810   3.330238\n",
       "std     104.530661   0.271617\n",
       "min    1634.000000   2.400000\n",
       "25%    1772.000000   3.190000\n",
       "50%    1846.000000   3.380000\n",
       "75%    1934.000000   3.502500\n",
       "max    2050.000000   3.810000"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    " y=df['GPA']\n",
    "x1=df['SAT']   \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import statsmodels.api as sm\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "sns.set()\n",
    "\n",
    "\n",
    "\n",
    "plt.scatter(x1,y)\n",
    "plt.xlabel('SAT')\n",
    "plt.ylabel('GPA')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>           <td>GPA</td>       <th>  R-squared:         </th> <td>   0.406</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.399</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   56.05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Sun, 28 Jul 2019</td> <th>  Prob (F-statistic):</th> <td>7.20e-11</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>18:31:02</td>     <th>  Log-Likelihood:    </th> <td>  12.672</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>    84</td>      <th>  AIC:               </th> <td>  -21.34</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>    82</td>      <th>  BIC:               </th> <td>  -16.48</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     1</td>      <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "    <td></td>       <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th> <td>    0.2750</td> <td>    0.409</td> <td>    0.673</td> <td> 0.503</td> <td>   -0.538</td> <td>    1.088</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SAT</th>   <td>    0.0017</td> <td>    0.000</td> <td>    7.487</td> <td> 0.000</td> <td>    0.001</td> <td>    0.002</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>12.839</td> <th>  Durbin-Watson:     </th> <td>   0.950</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.002</td> <th>  Jarque-Bera (JB):  </th> <td>  16.155</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-0.722</td> <th>  Prob(JB):          </th> <td>0.000310</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 4.590</td> <th>  Cond. No.          </th> <td>3.29e+04</td>\n",
       "</tr>\n",
       "</table><br/><br/>Warnings:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 3.29e+04. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:                    GPA   R-squared:                       0.406\n",
       "Model:                            OLS   Adj. R-squared:                  0.399\n",
       "Method:                 Least Squares   F-statistic:                     56.05\n",
       "Date:                Sun, 28 Jul 2019   Prob (F-statistic):           7.20e-11\n",
       "Time:                        18:31:02   Log-Likelihood:                 12.672\n",
       "No. Observations:                  84   AIC:                            -21.34\n",
       "Df Residuals:                      82   BIC:                            -16.48\n",
       "Df Model:                           1                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "==============================================================================\n",
       "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const          0.2750      0.409      0.673      0.503      -0.538       1.088\n",
       "SAT            0.0017      0.000      7.487      0.000       0.001       0.002\n",
       "==============================================================================\n",
       "Omnibus:                       12.839   Durbin-Watson:                   0.950\n",
       "Prob(Omnibus):                  0.002   Jarque-Bera (JB):               16.155\n",
       "Skew:                          -0.722   Prob(JB):                     0.000310\n",
       "Kurtosis:                       4.590   Cond. No.                     3.29e+04\n",
       "==============================================================================\n",
       "\n",
       "Warnings:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The condition number is large, 3.29e+04. This might indicate that there are\n",
       "strong multicollinearity or other numerical problems.\n",
       "\"\"\""
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x=sm.add_constant(x1)\n",
    "results=sm.OLS(y,x).fit()\n",
    "results.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x1,y)\n",
    "yhat=0.0017*x1+0.275\n",
    "fig=plt.plot(x1,yhat,c='red',label='regression line')\n",
    "plt.xlabel('sat')\n",
    "plt.ylabel('gpa')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import statsmodels.api as sm\n",
    "import seaborn\n",
    "seaborn.set()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "df=pd.read_csv('Multiple regression.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SAT</th>\n",
       "      <th>GPA</th>\n",
       "      <th>Rand 1,2,3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1714</td>\n",
       "      <td>2.40</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1664</td>\n",
       "      <td>2.52</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1760</td>\n",
       "      <td>2.54</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1685</td>\n",
       "      <td>2.74</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1693</td>\n",
       "      <td>2.83</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1670</td>\n",
       "      <td>2.91</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1764</td>\n",
       "      <td>3.00</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1764</td>\n",
       "      <td>3.00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1792</td>\n",
       "      <td>3.01</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1850</td>\n",
       "      <td>3.01</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1735</td>\n",
       "      <td>3.02</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1775</td>\n",
       "      <td>3.07</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1735</td>\n",
       "      <td>3.08</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1712</td>\n",
       "      <td>3.08</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>1773</td>\n",
       "      <td>3.12</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>1872</td>\n",
       "      <td>3.17</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1755</td>\n",
       "      <td>3.17</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>1674</td>\n",
       "      <td>3.17</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1842</td>\n",
       "      <td>3.17</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>1786</td>\n",
       "      <td>3.19</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>1761</td>\n",
       "      <td>3.19</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>1722</td>\n",
       "      <td>3.19</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>1663</td>\n",
       "      <td>3.20</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>1687</td>\n",
       "      <td>3.21</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>1974</td>\n",
       "      <td>3.24</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>1826</td>\n",
       "      <td>3.28</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>1787</td>\n",
       "      <td>3.28</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>1821</td>\n",
       "      <td>3.28</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>2020</td>\n",
       "      <td>3.28</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>1794</td>\n",
       "      <td>3.28</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>1879</td>\n",
       "      <td>3.44</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>1887</td>\n",
       "      <td>3.47</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>1730</td>\n",
       "      <td>3.47</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>1953</td>\n",
       "      <td>3.47</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>1781</td>\n",
       "      <td>3.47</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>1891</td>\n",
       "      <td>3.48</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>1964</td>\n",
       "      <td>3.49</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>1808</td>\n",
       "      <td>3.49</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>1893</td>\n",
       "      <td>3.50</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>2041</td>\n",
       "      <td>3.51</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>1893</td>\n",
       "      <td>3.51</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>1832</td>\n",
       "      <td>3.52</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>1850</td>\n",
       "      <td>3.52</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>1934</td>\n",
       "      <td>3.54</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>1861</td>\n",
       "      <td>3.58</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>1931</td>\n",
       "      <td>3.58</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>1933</td>\n",
       "      <td>3.59</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>1778</td>\n",
       "      <td>3.59</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>1975</td>\n",
       "      <td>3.60</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>1934</td>\n",
       "      <td>3.60</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>2021</td>\n",
       "      <td>3.61</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>2015</td>\n",
       "      <td>3.62</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>1997</td>\n",
       "      <td>3.64</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>2020</td>\n",
       "      <td>3.65</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>1843</td>\n",
       "      <td>3.71</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>1936</td>\n",
       "      <td>3.71</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>1810</td>\n",
       "      <td>3.71</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>1987</td>\n",
       "      <td>3.73</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>1962</td>\n",
       "      <td>3.76</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>2050</td>\n",
       "      <td>3.81</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>84 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     SAT   GPA  Rand 1,2,3\n",
       "0   1714  2.40           1\n",
       "1   1664  2.52           3\n",
       "2   1760  2.54           3\n",
       "3   1685  2.74           3\n",
       "4   1693  2.83           2\n",
       "5   1670  2.91           1\n",
       "6   1764  3.00           2\n",
       "7   1764  3.00           1\n",
       "8   1792  3.01           2\n",
       "9   1850  3.01           3\n",
       "10  1735  3.02           3\n",
       "11  1775  3.07           2\n",
       "12  1735  3.08           1\n",
       "13  1712  3.08           3\n",
       "14  1773  3.12           2\n",
       "15  1872  3.17           2\n",
       "16  1755  3.17           3\n",
       "17  1674  3.17           2\n",
       "18  1842  3.17           3\n",
       "19  1786  3.19           3\n",
       "20  1761  3.19           3\n",
       "21  1722  3.19           3\n",
       "22  1663  3.20           3\n",
       "23  1687  3.21           1\n",
       "24  1974  3.24           1\n",
       "25  1826  3.28           1\n",
       "26  1787  3.28           1\n",
       "27  1821  3.28           3\n",
       "28  2020  3.28           1\n",
       "29  1794  3.28           2\n",
       "..   ...   ...         ...\n",
       "54  1879  3.44           1\n",
       "55  1887  3.47           1\n",
       "56  1730  3.47           2\n",
       "57  1953  3.47           1\n",
       "58  1781  3.47           2\n",
       "59  1891  3.48           2\n",
       "60  1964  3.49           1\n",
       "61  1808  3.49           3\n",
       "62  1893  3.50           3\n",
       "63  2041  3.51           3\n",
       "64  1893  3.51           1\n",
       "65  1832  3.52           2\n",
       "66  1850  3.52           3\n",
       "67  1934  3.54           2\n",
       "68  1861  3.58           2\n",
       "69  1931  3.58           3\n",
       "70  1933  3.59           3\n",
       "71  1778  3.59           1\n",
       "72  1975  3.60           1\n",
       "73  1934  3.60           3\n",
       "74  2021  3.61           3\n",
       "75  2015  3.62           3\n",
       "76  1997  3.64           1\n",
       "77  2020  3.65           2\n",
       "78  1843  3.71           3\n",
       "79  1936  3.71           3\n",
       "80  1810  3.71           1\n",
       "81  1987  3.73           3\n",
       "82  1962  3.76           1\n",
       "83  2050  3.81           2\n",
       "\n",
       "[84 rows x 3 columns]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SAT</th>\n",
       "      <th>GPA</th>\n",
       "      <th>Rand 1,2,3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>84.000000</td>\n",
       "      <td>84.000000</td>\n",
       "      <td>84.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1845.273810</td>\n",
       "      <td>3.330238</td>\n",
       "      <td>2.059524</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>104.530661</td>\n",
       "      <td>0.271617</td>\n",
       "      <td>0.855192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1634.000000</td>\n",
       "      <td>2.400000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1772.000000</td>\n",
       "      <td>3.190000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1846.000000</td>\n",
       "      <td>3.380000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1934.000000</td>\n",
       "      <td>3.502500</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2050.000000</td>\n",
       "      <td>3.810000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               SAT        GPA  Rand 1,2,3\n",
       "count    84.000000  84.000000   84.000000\n",
       "mean   1845.273810   3.330238    2.059524\n",
       "std     104.530661   0.271617    0.855192\n",
       "min    1634.000000   2.400000    1.000000\n",
       "25%    1772.000000   3.190000    1.000000\n",
       "50%    1846.000000   3.380000    2.000000\n",
       "75%    1934.000000   3.502500    3.000000\n",
       "max    2050.000000   3.810000    3.000000"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "y=df['GPA']\n",
    "X=df[['SAT','Rand 1,2,3']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "x=sm.add_constant(x1)\n",
    "result=sm.OLS(y,x).fit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>           <td>GPA</td>       <th>  R-squared:         </th> <td>   0.406</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.399</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   56.05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Sun, 28 Jul 2019</td> <th>  Prob (F-statistic):</th> <td>7.20e-11</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>23:14:43</td>     <th>  Log-Likelihood:    </th> <td>  12.672</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>    84</td>      <th>  AIC:               </th> <td>  -21.34</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>    82</td>      <th>  BIC:               </th> <td>  -16.48</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     1</td>      <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "    <td></td>       <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th> <td>    0.2750</td> <td>    0.409</td> <td>    0.673</td> <td> 0.503</td> <td>   -0.538</td> <td>    1.088</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SAT</th>   <td>    0.0017</td> <td>    0.000</td> <td>    7.487</td> <td> 0.000</td> <td>    0.001</td> <td>    0.002</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>12.839</td> <th>  Durbin-Watson:     </th> <td>   0.950</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.002</td> <th>  Jarque-Bera (JB):  </th> <td>  16.155</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-0.722</td> <th>  Prob(JB):          </th> <td>0.000310</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 4.590</td> <th>  Cond. No.          </th> <td>3.29e+04</td>\n",
       "</tr>\n",
       "</table><br/><br/>Warnings:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 3.29e+04. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:                    GPA   R-squared:                       0.406\n",
       "Model:                            OLS   Adj. R-squared:                  0.399\n",
       "Method:                 Least Squares   F-statistic:                     56.05\n",
       "Date:                Sun, 28 Jul 2019   Prob (F-statistic):           7.20e-11\n",
       "Time:                        23:14:43   Log-Likelihood:                 12.672\n",
       "No. Observations:                  84   AIC:                            -21.34\n",
       "Df Residuals:                      82   BIC:                            -16.48\n",
       "Df Model:                           1                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "==============================================================================\n",
       "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const          0.2750      0.409      0.673      0.503      -0.538       1.088\n",
       "SAT            0.0017      0.000      7.487      0.000       0.001       0.002\n",
       "==============================================================================\n",
       "Omnibus:                       12.839   Durbin-Watson:                   0.950\n",
       "Prob(Omnibus):                  0.002   Jarque-Bera (JB):               16.155\n",
       "Skew:                          -0.722   Prob(JB):                     0.000310\n",
       "Kurtosis:                       4.590   Cond. No.                     3.29e+04\n",
       "==============================================================================\n",
       "\n",
       "Warnings:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The condition number is large, 3.29e+04. This might indicate that there are\n",
       "strong multicollinearity or other numerical problems.\n",
       "\"\"\""
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np \n",
    "import pandas as pd\n",
    "import statsmodels.api as sm\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "sns.set()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SAT</th>\n",
       "      <th>GPA</th>\n",
       "      <th>Attendance</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1714</td>\n",
       "      <td>2.40</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1664</td>\n",
       "      <td>2.52</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1760</td>\n",
       "      <td>2.54</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1685</td>\n",
       "      <td>2.74</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1693</td>\n",
       "      <td>2.83</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1670</td>\n",
       "      <td>2.91</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1764</td>\n",
       "      <td>3.00</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1764</td>\n",
       "      <td>3.00</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1792</td>\n",
       "      <td>3.01</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1850</td>\n",
       "      <td>3.01</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1735</td>\n",
       "      <td>3.02</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1775</td>\n",
       "      <td>3.07</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1735</td>\n",
       "      <td>3.08</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1712</td>\n",
       "      <td>3.08</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>1773</td>\n",
       "      <td>3.12</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>1872</td>\n",
       "      <td>3.17</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1755</td>\n",
       "      <td>3.17</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>1674</td>\n",
       "      <td>3.17</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1842</td>\n",
       "      <td>3.17</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>1786</td>\n",
       "      <td>3.19</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>1761</td>\n",
       "      <td>3.19</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>1722</td>\n",
       "      <td>3.19</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>1663</td>\n",
       "      <td>3.20</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>1687</td>\n",
       "      <td>3.21</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>1974</td>\n",
       "      <td>3.24</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>1826</td>\n",
       "      <td>3.28</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>1787</td>\n",
       "      <td>3.28</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>1821</td>\n",
       "      <td>3.28</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>2020</td>\n",
       "      <td>3.28</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>1794</td>\n",
       "      <td>3.28</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>1879</td>\n",
       "      <td>3.44</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>1887</td>\n",
       "      <td>3.47</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>1730</td>\n",
       "      <td>3.47</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>1953</td>\n",
       "      <td>3.47</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>1781</td>\n",
       "      <td>3.47</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>1891</td>\n",
       "      <td>3.48</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>1964</td>\n",
       "      <td>3.49</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>1808</td>\n",
       "      <td>3.49</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>1893</td>\n",
       "      <td>3.50</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>2041</td>\n",
       "      <td>3.51</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>1893</td>\n",
       "      <td>3.51</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>1832</td>\n",
       "      <td>3.52</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>1850</td>\n",
       "      <td>3.52</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>1934</td>\n",
       "      <td>3.54</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>1861</td>\n",
       "      <td>3.58</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>1931</td>\n",
       "      <td>3.58</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>1933</td>\n",
       "      <td>3.59</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>1778</td>\n",
       "      <td>3.59</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>1975</td>\n",
       "      <td>3.60</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>1934</td>\n",
       "      <td>3.60</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>2021</td>\n",
       "      <td>3.61</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>2015</td>\n",
       "      <td>3.62</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>1997</td>\n",
       "      <td>3.64</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>2020</td>\n",
       "      <td>3.65</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>1843</td>\n",
       "      <td>3.71</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>1936</td>\n",
       "      <td>3.71</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>1810</td>\n",
       "      <td>3.71</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>1987</td>\n",
       "      <td>3.73</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>1962</td>\n",
       "      <td>3.76</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>2050</td>\n",
       "      <td>3.81</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>84 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     SAT   GPA Attendance\n",
       "0   1714  2.40         No\n",
       "1   1664  2.52         No\n",
       "2   1760  2.54         No\n",
       "3   1685  2.74         No\n",
       "4   1693  2.83         No\n",
       "5   1670  2.91         No\n",
       "6   1764  3.00         No\n",
       "7   1764  3.00         No\n",
       "8   1792  3.01         No\n",
       "9   1850  3.01         No\n",
       "10  1735  3.02         No\n",
       "11  1775  3.07         No\n",
       "12  1735  3.08         No\n",
       "13  1712  3.08         No\n",
       "14  1773  3.12         No\n",
       "15  1872  3.17        Yes\n",
       "16  1755  3.17         No\n",
       "17  1674  3.17        Yes\n",
       "18  1842  3.17         No\n",
       "19  1786  3.19        Yes\n",
       "20  1761  3.19         No\n",
       "21  1722  3.19         No\n",
       "22  1663  3.20         No\n",
       "23  1687  3.21         No\n",
       "24  1974  3.24         No\n",
       "25  1826  3.28         No\n",
       "26  1787  3.28         No\n",
       "27  1821  3.28         No\n",
       "28  2020  3.28         No\n",
       "29  1794  3.28         No\n",
       "..   ...   ...        ...\n",
       "54  1879  3.44        Yes\n",
       "55  1887  3.47        Yes\n",
       "56  1730  3.47        Yes\n",
       "57  1953  3.47         No\n",
       "58  1781  3.47        Yes\n",
       "59  1891  3.48        Yes\n",
       "60  1964  3.49         No\n",
       "61  1808  3.49         No\n",
       "62  1893  3.50        Yes\n",
       "63  2041  3.51         No\n",
       "64  1893  3.51        Yes\n",
       "65  1832  3.52        Yes\n",
       "66  1850  3.52        Yes\n",
       "67  1934  3.54        Yes\n",
       "68  1861  3.58        Yes\n",
       "69  1931  3.58        Yes\n",
       "70  1933  3.59        Yes\n",
       "71  1778  3.59        Yes\n",
       "72  1975  3.60        Yes\n",
       "73  1934  3.60        Yes\n",
       "74  2021  3.61        Yes\n",
       "75  2015  3.62        Yes\n",
       "76  1997  3.64        Yes\n",
       "77  2020  3.65         No\n",
       "78  1843  3.71        Yes\n",
       "79  1936  3.71        Yes\n",
       "80  1810  3.71        Yes\n",
       "81  1987  3.73         No\n",
       "82  1962  3.76        Yes\n",
       "83  2050  3.81        Yes\n",
       "\n",
       "[84 rows x 3 columns]"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data=pd.read_csv('Dummies.csv')\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "new_data=data.copy()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [],
   "source": [
    "new_data['Attendance']=new_data['Attendance'].map({'Yes':1,'No':0})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SAT</th>\n",
       "      <th>GPA</th>\n",
       "      <th>Attendance</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1714</td>\n",
       "      <td>2.40</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1664</td>\n",
       "      <td>2.52</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1760</td>\n",
       "      <td>2.54</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1685</td>\n",
       "      <td>2.74</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1693</td>\n",
       "      <td>2.83</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1670</td>\n",
       "      <td>2.91</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1764</td>\n",
       "      <td>3.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1764</td>\n",
       "      <td>3.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1792</td>\n",
       "      <td>3.01</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1850</td>\n",
       "      <td>3.01</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1735</td>\n",
       "      <td>3.02</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1775</td>\n",
       "      <td>3.07</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1735</td>\n",
       "      <td>3.08</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1712</td>\n",
       "      <td>3.08</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>1773</td>\n",
       "      <td>3.12</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>1872</td>\n",
       "      <td>3.17</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1755</td>\n",
       "      <td>3.17</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>1674</td>\n",
       "      <td>3.17</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1842</td>\n",
       "      <td>3.17</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>1786</td>\n",
       "      <td>3.19</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>1761</td>\n",
       "      <td>3.19</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>1722</td>\n",
       "      <td>3.19</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>1663</td>\n",
       "      <td>3.20</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>1687</td>\n",
       "      <td>3.21</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>1974</td>\n",
       "      <td>3.24</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>1826</td>\n",
       "      <td>3.28</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>1787</td>\n",
       "      <td>3.28</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>1821</td>\n",
       "      <td>3.28</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>2020</td>\n",
       "      <td>3.28</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>1794</td>\n",
       "      <td>3.28</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>1879</td>\n",
       "      <td>3.44</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>1887</td>\n",
       "      <td>3.47</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>1730</td>\n",
       "      <td>3.47</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>1953</td>\n",
       "      <td>3.47</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>1781</td>\n",
       "      <td>3.47</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>1891</td>\n",
       "      <td>3.48</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>1964</td>\n",
       "      <td>3.49</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>1808</td>\n",
       "      <td>3.49</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>1893</td>\n",
       "      <td>3.50</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>2041</td>\n",
       "      <td>3.51</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>1893</td>\n",
       "      <td>3.51</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>1832</td>\n",
       "      <td>3.52</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>1850</td>\n",
       "      <td>3.52</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>1934</td>\n",
       "      <td>3.54</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>1861</td>\n",
       "      <td>3.58</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>1931</td>\n",
       "      <td>3.58</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>1933</td>\n",
       "      <td>3.59</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>1778</td>\n",
       "      <td>3.59</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>1975</td>\n",
       "      <td>3.60</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>1934</td>\n",
       "      <td>3.60</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>2021</td>\n",
       "      <td>3.61</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>2015</td>\n",
       "      <td>3.62</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>1997</td>\n",
       "      <td>3.64</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>2020</td>\n",
       "      <td>3.65</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>1843</td>\n",
       "      <td>3.71</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>1936</td>\n",
       "      <td>3.71</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>1810</td>\n",
       "      <td>3.71</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>1987</td>\n",
       "      <td>3.73</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>1962</td>\n",
       "      <td>3.76</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>2050</td>\n",
       "      <td>3.81</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>84 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     SAT   GPA  Attendance\n",
       "0   1714  2.40           0\n",
       "1   1664  2.52           0\n",
       "2   1760  2.54           0\n",
       "3   1685  2.74           0\n",
       "4   1693  2.83           0\n",
       "5   1670  2.91           0\n",
       "6   1764  3.00           0\n",
       "7   1764  3.00           0\n",
       "8   1792  3.01           0\n",
       "9   1850  3.01           0\n",
       "10  1735  3.02           0\n",
       "11  1775  3.07           0\n",
       "12  1735  3.08           0\n",
       "13  1712  3.08           0\n",
       "14  1773  3.12           0\n",
       "15  1872  3.17           1\n",
       "16  1755  3.17           0\n",
       "17  1674  3.17           1\n",
       "18  1842  3.17           0\n",
       "19  1786  3.19           1\n",
       "20  1761  3.19           0\n",
       "21  1722  3.19           0\n",
       "22  1663  3.20           0\n",
       "23  1687  3.21           0\n",
       "24  1974  3.24           0\n",
       "25  1826  3.28           0\n",
       "26  1787  3.28           0\n",
       "27  1821  3.28           0\n",
       "28  2020  3.28           0\n",
       "29  1794  3.28           0\n",
       "..   ...   ...         ...\n",
       "54  1879  3.44           1\n",
       "55  1887  3.47           1\n",
       "56  1730  3.47           1\n",
       "57  1953  3.47           0\n",
       "58  1781  3.47           1\n",
       "59  1891  3.48           1\n",
       "60  1964  3.49           0\n",
       "61  1808  3.49           0\n",
       "62  1893  3.50           1\n",
       "63  2041  3.51           0\n",
       "64  1893  3.51           1\n",
       "65  1832  3.52           1\n",
       "66  1850  3.52           1\n",
       "67  1934  3.54           1\n",
       "68  1861  3.58           1\n",
       "69  1931  3.58           1\n",
       "70  1933  3.59           1\n",
       "71  1778  3.59           1\n",
       "72  1975  3.60           1\n",
       "73  1934  3.60           1\n",
       "74  2021  3.61           1\n",
       "75  2015  3.62           1\n",
       "76  1997  3.64           1\n",
       "77  2020  3.65           0\n",
       "78  1843  3.71           1\n",
       "79  1936  3.71           1\n",
       "80  1810  3.71           1\n",
       "81  1987  3.73           0\n",
       "82  1962  3.76           1\n",
       "83  2050  3.81           1\n",
       "\n",
       "[84 rows x 3 columns]"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SAT</th>\n",
       "      <th>GPA</th>\n",
       "      <th>Attendance</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>84.000000</td>\n",
       "      <td>84.000000</td>\n",
       "      <td>84.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1845.273810</td>\n",
       "      <td>3.330238</td>\n",
       "      <td>0.464286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>104.530661</td>\n",
       "      <td>0.271617</td>\n",
       "      <td>0.501718</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1634.000000</td>\n",
       "      <td>2.400000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1772.000000</td>\n",
       "      <td>3.190000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1846.000000</td>\n",
       "      <td>3.380000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1934.000000</td>\n",
       "      <td>3.502500</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2050.000000</td>\n",
       "      <td>3.810000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               SAT        GPA  Attendance\n",
       "count    84.000000  84.000000   84.000000\n",
       "mean   1845.273810   3.330238    0.464286\n",
       "std     104.530661   0.271617    0.501718\n",
       "min    1634.000000   2.400000    0.000000\n",
       "25%    1772.000000   3.190000    0.000000\n",
       "50%    1846.000000   3.380000    0.000000\n",
       "75%    1934.000000   3.502500    1.000000\n",
       "max    2050.000000   3.810000    1.000000"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [],
   "source": [
    "y=new_data['GPA']\n",
    "x1=new_data[['SAT','Attendance']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>           <td>GPA</td>       <th>  R-squared:         </th> <td>   0.565</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.555</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   52.70</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Wed, 31 Jul 2019</td> <th>  Prob (F-statistic):</th> <td>2.19e-15</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>00:06:05</td>     <th>  Log-Likelihood:    </th> <td>  25.798</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>    84</td>      <th>  AIC:               </th> <td>  -45.60</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>    81</td>      <th>  BIC:               </th> <td>  -38.30</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     2</td>      <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "       <td></td>         <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>      <td>    0.6439</td> <td>    0.358</td> <td>    1.797</td> <td> 0.076</td> <td>   -0.069</td> <td>    1.357</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SAT</th>        <td>    0.0014</td> <td>    0.000</td> <td>    7.141</td> <td> 0.000</td> <td>    0.001</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Attendance</th> <td>    0.2226</td> <td>    0.041</td> <td>    5.451</td> <td> 0.000</td> <td>    0.141</td> <td>    0.304</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>19.560</td> <th>  Durbin-Watson:     </th> <td>   1.009</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td>  27.189</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-1.028</td> <th>  Prob(JB):          </th> <td>1.25e-06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 4.881</td> <th>  Cond. No.          </th> <td>3.35e+04</td>\n",
       "</tr>\n",
       "</table><br/><br/>Warnings:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 3.35e+04. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:                    GPA   R-squared:                       0.565\n",
       "Model:                            OLS   Adj. R-squared:                  0.555\n",
       "Method:                 Least Squares   F-statistic:                     52.70\n",
       "Date:                Wed, 31 Jul 2019   Prob (F-statistic):           2.19e-15\n",
       "Time:                        00:06:05   Log-Likelihood:                 25.798\n",
       "No. Observations:                  84   AIC:                            -45.60\n",
       "Df Residuals:                      81   BIC:                            -38.30\n",
       "Df Model:                           2                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "==============================================================================\n",
       "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const          0.6439      0.358      1.797      0.076      -0.069       1.357\n",
       "SAT            0.0014      0.000      7.141      0.000       0.001       0.002\n",
       "Attendance     0.2226      0.041      5.451      0.000       0.141       0.304\n",
       "==============================================================================\n",
       "Omnibus:                       19.560   Durbin-Watson:                   1.009\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):               27.189\n",
       "Skew:                          -1.028   Prob(JB):                     1.25e-06\n",
       "Kurtosis:                       4.881   Cond. No.                     3.35e+04\n",
       "==============================================================================\n",
       "\n",
       "Warnings:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The condition number is large, 3.35e+04. This might indicate that there are\n",
       "strong multicollinearity or other numerical problems.\n",
       "\"\"\""
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x=sm.add_constant(x1)\n",
    "results=sm.OLS(y,x).fit() \n",
    "results.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(new_data['SAT'],y)\n",
    "yhat_no=0.6439+0.0014*data['SAT']\n",
    "yhat_yes=0.8665+0.0014*data['SAT']\n",
    "fig=plt.plot(new_data['SAT'],yhat_no,c='Red')\n",
    "fig=plt.plot(new_data['SAT'],yhat_yes,c='Blue')\n",
    "plt.xlabel('SAT')\n",
    "plt.ylabel('GPA')\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
